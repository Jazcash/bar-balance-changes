import { PreparsedUnitDef, UnitDefValueType } from "./types";

export const buffComparators = {
    higherIsBetter: (prev: number, curr: number) => curr > prev,
    lowerIsBetter: (prev: number, curr: number) => curr < prev,
    trueIsBetter: (prev: boolean, curr: boolean) => curr === true,
    falseIsBetter: (prev: boolean, curr: boolean) => curr === false,
};

export const unitDefProps: PreparsedUnitDef = {
    // https://springrts.com/wiki/Gamedev:UnitDefs
    acceleration: { friendlyName: "Acceleration", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    autoheal: { friendlyName: "AutoHeal", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    brakerate: { friendlyName: "Brake Rate", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    builder: { friendlyName: "Builder", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    buildcostenergy: { friendlyName: "Energy Build Cost", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    buildcostmetal: { friendlyName: "Metal Build Cost", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    builddistance: { friendlyName: "Build Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    buildtime: { friendlyName: "Build Time", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    cancapture: { friendlyName: "Can Capture", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    cancloak: { friendlyName: "Can Cloak", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    canmanualfire: { friendlyName: "Can Fire Manually", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    canmove: { friendlyName: "Can Move", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    capturespeed: { friendlyName: "Capture Speed", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    category: { friendlyName: "Unit Categories", type: UnitDefValueType.STRING_ARRAY },
    cloakcost: { friendlyName: "Cloak Cost", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    cloakcostmoving: { friendlyName: "Moving Cloak Cost", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    energymake: { friendlyName: "Energy Generation", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    energystorage: { friendlyName: "Energy Storage", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    explodeas: { friendlyName: "Explosion Type", type: UnitDefValueType.STRING },
    hidedamage: { friendlyName: "Hide Damage", type: UnitDefValueType.BOOLEAN },
    holdsteady: { friendlyName: "Hold Steady", type: UnitDefValueType.BOOLEAN },
    idleautoheal: { friendlyName: "Idle AutoHeal", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    idletime: { friendlyName: "Idle Time", type: UnitDefValueType.NUMBER },
    losemitheight: { friendlyName: "LOS Height", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    mass: { friendlyName: "Mass", type: UnitDefValueType.NUMBER },
    maxdamage: { friendlyName: "Base HP", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    maxslope: { friendlyName: "Max Slope", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    maxvelocity: { friendlyName: "Max Velocity", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    maxwaterdepth: { friendlyName: "Max Water Depth", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    metalmake: { friendlyName: "Metal Genegeration", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    metalstorage: { friendlyName: "Metal Storage", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    mincloakdistance: { friendlyName: "Min Cloak Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    movementclass: { friendlyName: "Movement Class", type: UnitDefValueType.STRING },
    nochasecategory: { friendlyName: "Name", type: UnitDefValueType.STRING },
    pushresistant: { friendlyName: "Push Resistant", type: UnitDefValueType.BOOLEAN },
    radardistance: { friendlyName: "Radar Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    radaremitheight: { friendlyName: "Radar LOS Height", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    reclaimable: { friendlyName: "Reclaimable", type: UnitDefValueType.BOOLEAN },
    resurrectable: { friendlyName: "Resurrectable", type: UnitDefValueType.BOOLEAN },
    releaseheld: { friendlyName: "Safely Drops Units", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    seismicsignature: { friendlyName: "Seismic Signature", type: UnitDefValueType.NUMBER },
    selfdestructas: { friendlyName: "Self D Type", type: UnitDefValueType.STRING },
    selfdestructcountdown: { friendlyName: "Self D Time", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    showplayername: { friendlyName: "Show Player Name", type: UnitDefValueType.STRING },
    sightdistance: { friendlyName: "Sight Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    stealth: { friendlyName: "Stealth", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    sonardistance: { friendlyName: "Sonar Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    terraformspeed: { friendlyName: "Terraform Speed", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    turninplaceanglelimit: { friendlyName: "Turn in Place Angle Limit", type: UnitDefValueType.NUMBER },
    turninplacespeedlimit: { friendlyName: "Turn in Place Speed Limit", type: UnitDefValueType.NUMBER },
    turnrate: { friendlyName: "Turn Rate", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    upright: { friendlyName: "Upright", type: UnitDefValueType.BOOLEAN },
    workertime: { friendlyName: "Build Power", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    buildoptions: { friendlyName: "Build Options", type: UnitDefValueType.STRING_ARRAY, isLuaTable: true },

    // https://springrts.com/wiki/Gamedev:FeatureDefs
    featuredefs: { friendlyName: "Features", type: UnitDefValueType.UNITDEF_OBJECT },
    blocking: { friendlyName: "Blocking", type: UnitDefValueType.BOOLEAN },
    damage: { friendlyName: "Damage", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    energy: { friendlyName: "Energy", type: UnitDefValueType.NUMBER },
    featuredead: { friendlyName: "Dead Feature Type", type: UnitDefValueType.STRING },
    height: { friendlyName: "Height", type: UnitDefValueType.NUMBER },
    hitdensity: { friendlyName: "Hit Density", type: UnitDefValueType.NUMBER },
    metal: { friendlyName: "Metal", type: UnitDefValueType.NUMBER },

    // https://springrts.com/wiki/Gamedev:WeaponDefs
    weapondefs: { friendlyName: "Weapons", type: UnitDefValueType.UNITDEF_OBJECT },
    areaofeffect: { friendlyName: "Area of Effect", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    avoidfeature: { friendlyName: "Avoid Features", type: UnitDefValueType.BOOLEAN },
    avoidfriendly: { friendlyName: "Avoid Friendlies", type: UnitDefValueType.BOOLEAN },
    avoidground: { friendlyName: "Avoid Ground", type: UnitDefValueType.BOOLEAN },
    beamtime: { friendlyName: "Beam Time", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    bouncerebound: { friendlyName: "Bounce Rebound", type: UnitDefValueType.NUMBER },
    burnblow: { friendlyName: "Self Explode", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    commandfire: { friendlyName: "Command Fire", type: UnitDefValueType.BOOLEAN },
    craterareaofeffect: { friendlyName: "Crater Area of Effect", type: UnitDefValueType.NUMBER },
    edgeeffectiveness: { friendlyName: "Edge Effectiveness", type: UnitDefValueType.NUMBER },
    energypershot: { friendlyName: "Energy Per Shot", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    firestarter: { friendlyName: "Fire Starter", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.trueIsBetter },
    firesubmersed: { friendlyName: "Fire Submersed", type: UnitDefValueType.BOOLEAN },
    flighttime: { friendlyName: "Flight Time", type: UnitDefValueType.NUMBER },
    groundbounce: { friendlyName: "Ground Bounce", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    impactonly: { friendlyName: "Impact Only", type: UnitDefValueType.NUMBER },
    impulseboost: { friendlyName: "Impulse Boost", type: UnitDefValueType.NUMBER },
    impulsefactor: { friendlyName: "Impulse Factor", type: UnitDefValueType.NUMBER },
    noexplode: { friendlyName: "Explode on Impact", type: UnitDefValueType.BOOLEAN },
    noselfdamage: { friendlyName: "No Self Damage", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    range: { friendlyName: "Range", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    reloadtime: { friendlyName: "Reload Time", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    sprayangle: { friendlyName: "Spray Angle", type: UnitDefValueType.NUMBER },
    targetmoveerror: { friendlyName: "Target Move Error", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    thickness: { friendlyName: "Thickness", type: UnitDefValueType.NUMBER },
    tolerance: { friendlyName: "Tolerance", type: UnitDefValueType.NUMBER },
    turret: { friendlyName: "Turret", type: UnitDefValueType.BOOLEAN },
    waterweapon: { friendlyName: "Water Weapon", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    weapontimer: { friendlyName: "Weapon Timer", type: UnitDefValueType.NUMBER },
    weapontype: { friendlyName: "Weapon Type", type: UnitDefValueType.STRING },
    weaponvelocity: { friendlyName: "Weapon Velocity", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    energyuse: { friendlyName: "Energy Use", type: UnitDefValueType.NUMBER },
    force: { friendlyName: "Force", type: UnitDefValueType.NUMBER },
    intercepttype: { friendlyName: "Intercept Type", type: UnitDefValueType.NUMBER },
    power: { friendlyName: "Power", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    powerregen: { friendlyName: "Power Regen", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    powerregenenergy: { friendlyName: "Power Regen Energy", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    radius: { friendlyName: "Radius", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    rechargedelay: { friendlyName: "Recharge Delay", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    repulser: { friendlyName: "Repulser", type: UnitDefValueType.NUMBER },
    smart: { friendlyName: "Smart", type: UnitDefValueType.BOOLEAN },
    startingpower: { friendlyName: "Starting Power", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    visible: { friendlyName: "Visible", type: UnitDefValueType.BOOLEAN },
    visiblehitframes: { friendlyName: "Visible Hit Frames", type: UnitDefValueType.NUMBER },

    // Custom params
    customparams: { friendlyName: "Custom Params", type: UnitDefValueType.ANY_MAP },
    paralyzemultiplier: { friendlyName: "Paralyze Multiplier", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
};