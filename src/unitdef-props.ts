import { PreparsedUnitDef, UnitDefValueType } from "./types";

export const buffComparators = {
    higherIsBetter: (prev: number, curr: number) => curr > prev,
    lowerIsBetter: (prev: number, curr: number) => curr < prev,
    trueIsBetter: (prev: boolean, curr: boolean) => curr === true,
    falseIsBetter: (prev: boolean, curr: boolean) => curr === false,
};

export const unitDefProps: PreparsedUnitDef = {
    // https://springrts.com/wiki/Gamedev:UnitDefs
    acceleration: { friendlyName: "Acceleration", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    autoheal: { friendlyName: "AutoHeal", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    brakerate: { friendlyName: "Brake Rate", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    builder: { friendlyName: "Builder", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    buildcostenergy: { friendlyName: "Energy Build Cost", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    buildcostmetal: { friendlyName: "Metal Build Cost", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    builddistance: { friendlyName: "Build Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    buildpic: { friendlyName: "Build Pic", type: UnitDefValueType.STRING, isBalanceChange: false },
    buildtime: { friendlyName: "Build Time", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    cancapture: { friendlyName: "Can Capture", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    cancloak: { friendlyName: "Can Cloak", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    canmanualfire: { friendlyName: "Can Fire Manually", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    canmove: { friendlyName: "Can Move", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    capturespeed: { friendlyName: "Capture Speed", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    category: { friendlyName: "Unit Categories", type: UnitDefValueType.STRING_ARRAY },
    cloakcost: { friendlyName: "Cloak Cost", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    cloakcostmoving: { friendlyName: "Moving Cloak Cost", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    collisionvolumeoffsets: { friendlyName: "Collision Volume Offsets", type: UnitDefValueType.NUMBER_ARRAY, isBalanceChange: false },
    collisionvolumescales: { friendlyName: "Collision Volume Scales", type: UnitDefValueType.NUMBER_ARRAY, isBalanceChange: false },
    collisionvolumetype: { friendlyName: "Collision Volume Type", type: UnitDefValueType.STRING, isBalanceChange: false },
    corpse: { friendlyName: "Corpse Type", type: UnitDefValueType.STRING, isBalanceChange: false },
    description: { friendlyName: "Description", type: UnitDefValueType.STRING, isBalanceChange: false },
    energymake: { friendlyName: "Energy Generation", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    energystorage: { friendlyName: "Energy Storage", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    explodeas: { friendlyName: "Explosion Type", type: UnitDefValueType.STRING },
    footprintx: { friendlyName: "Footprint X", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    footprintz: { friendlyName: "Footprint Z", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    hidedamage: { friendlyName: "Hide Damage", type: UnitDefValueType.BOOLEAN },
    holdsteady: { friendlyName: "Hold Steady", type: UnitDefValueType.BOOLEAN },
    icontype: { friendlyName: "Icon Type", type: UnitDefValueType.STRING, isBalanceChange: false },
    idleautoheal: { friendlyName: "Idle AutoHeal", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    idletime: { friendlyName: "Idle Time", type: UnitDefValueType.NUMBER },
    losemitheight: { friendlyName: "LOS Height", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    mass: { friendlyName: "Mass", type: UnitDefValueType.NUMBER },
    maxdamage: { friendlyName: "Base HP", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    maxslope: { friendlyName: "Max Slope", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    maxvelocity: { friendlyName: "Max Velocity", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    maxwaterdepth: { friendlyName: "Max Water Depth", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    metalmake: { friendlyName: "Metal Genegeration", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    metalstorage: { friendlyName: "Metal Storage", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    mincloakdistance: { friendlyName: "Min Cloak Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    movementclass: { friendlyName: "Movement Class", type: UnitDefValueType.STRING },
    name: { friendlyName: "Name", type: UnitDefValueType.STRING, isBalanceChange: false },
    nochasecategory: { friendlyName: "Name", type: UnitDefValueType.STRING },
    objectname: { friendlyName: "Object Name", type: UnitDefValueType.STRING, isBalanceChange: false },
    pushresistant: { friendlyName: "Push Resistant", type: UnitDefValueType.BOOLEAN },
    radardistance: { friendlyName: "Radar Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    radaremitheight: { friendlyName: "Radar LOS Height", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    reclaimable: { friendlyName: "Reclaimable", type: UnitDefValueType.BOOLEAN },
    resurrectable: { friendlyName: "Resurrectable", type: UnitDefValueType.BOOLEAN },
    releaseheld: { friendlyName: "Safely Drops Units", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    script: { friendlyName: "Script", type: UnitDefValueType.STRING, isBalanceChange: false },
    seismicsignature: { friendlyName: "Seismic Signature", type: UnitDefValueType.NUMBER },
    selfdestructas: { friendlyName: "Self D Type", type: UnitDefValueType.STRING },
    selfdestructcountdown: { friendlyName: "Self D Time", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    showplayername: { friendlyName: "Show Player Name", type: UnitDefValueType.STRING },
    sightdistance: { friendlyName: "Sight Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    stealth: { friendlyName: "Stealth", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    sonardistance: { friendlyName: "Sonar Distance", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    terraformspeed: { friendlyName: "Terraform Speed", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    trackoffset: { friendlyName: "Track Offset", type: UnitDefValueType.NUMBER },
    trackstrength: { friendlyName: "Track Strength", type: UnitDefValueType.NUMBER },
    tracktype: { friendlyName: "Track Type", type: UnitDefValueType.STRING },
    trackwidth: { friendlyName: "Track Width", type: UnitDefValueType.NUMBER },
    turninplaceanglelimit: { friendlyName: "Turn in Place Angle Limit", type: UnitDefValueType.NUMBER },
    turninplacespeedlimit: { friendlyName: "Turn in Place Speed Limit", type: UnitDefValueType.NUMBER },
    turnrate: { friendlyName: "Turn Rate", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    upright: { friendlyName: "Upright", type: UnitDefValueType.BOOLEAN },
    workertime: { friendlyName: "Build Power", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    buildoptions: { friendlyName: "Build Options", type: UnitDefValueType.STRING_ARRAY, isLuaTable: true },
    buildinggrounddecaltype: { friendlyName: "Building Ground Decal Type", type: UnitDefValueType.STRING, isBalanceChange: false },
    buildinggrounddecalsizex: { friendlyName: "Building Ground Decal Type", type: UnitDefValueType.STRING, isBalanceChange: false },
    buildinggrounddecalsizey: { friendlyName: "Building Ground Decal Type", type: UnitDefValueType.STRING, isBalanceChange: false },
    uardmap: { friendlyName: "Yardmap", type: UnitDefValueType.STRING, isBalanceChange: false },

    // Custom params
    customparams: { friendlyName: "Custom Params", type: UnitDefValueType.ANY_MAP },
    paralyzemultiplier: { friendlyName: "Paralyze Multiplier", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    expl_light_color: { friendlyName: "Explosion Light Color", type: UnitDefValueType.STRING, isBalanceChange: false },
    expl_light_mult: { friendlyName: "Explosion Light Multiplier", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    expl_light_radius_mult: { friendlyName: "Explosion Light Radius Multiplier", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    expl_light_life_mult: { friendlyName: "Explosion Light Life Multiplier", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    light_color: { friendlyName: "Light Color", type: UnitDefValueType.STRING, isBalanceChange: false },
    light_skip: { friendlyName: "Light Skip", type: UnitDefValueType.BOOLEAN, isBalanceChange: false },
    normaltex: { friendlyName: "Normal Texture", type: UnitDefValueType.STRING, isBalanceChange: false },
    model_author: { friendlyName: "Model Author", type: UnitDefValueType.STRING, isBalanceChange: false },
    subfolder: { friendlyName: "Subfolder", type: UnitDefValueType.STRING, isBalanceChange: false },
    longdescription: { friendlyName: "Long Description", type: UnitDefValueType.STRING, isBalanceChange: false },
    area_mex_def: { friendlyName: "Arex Mex Def", type: UnitDefValueType.STRING, isBalanceChange: false },
    model: { friendlyName: "Model", type: UnitDefValueType.STRING, isBalanceChange: false },
    smoketrail: { friendlyName: "Smoke Trail", type: UnitDefValueType.BOOLEAN, isBalanceChange: false },
    light_mult: { friendlyName: "Light Mult", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    light_life_mult: { friendlyName: "Light Mult", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    light_radius_mult: { friendlyName: "Light Radius Mult", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    expl_light_heat_radius_mult: { friendlyName: "", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    expl_light_heat_strength_mult: { friendlyName: "", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    expl_light_heat_radius: { friendlyName: "", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    expl_light_radius: { friendlyName: "", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    texture2: { friendlyName: "Texture 2", type: UnitDefValueType.STRING, isBalanceChange: false },
    
    // https://springrts.com/wiki/Gamedev:FeatureDefs
    featuredefs: { friendlyName: "Features", type: UnitDefValueType.UNITDEF_OBJECT },
    blocking: { friendlyName: "Blocking", type: UnitDefValueType.BOOLEAN },
    damage: { friendlyName: "Damage", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    energy: { friendlyName: "Energy", type: UnitDefValueType.NUMBER },
    featuredead: { friendlyName: "Dead Feature Type", type: UnitDefValueType.STRING },
    featurereclamate: { friendlyName: "Feature Reclamate", type: UnitDefValueType.STRING, isBalanceChange: false },
    height: { friendlyName: "Height", type: UnitDefValueType.NUMBER },
    hitdensity: { friendlyName: "Hit Density", type: UnitDefValueType.NUMBER },
    metal: { friendlyName: "Metal", type: UnitDefValueType.NUMBER },
    object: { friendlyName: "Object", type: UnitDefValueType.STRING, isBalanceChange: false },
    seqnamereclamate: { friendlyName: "Seqname Reclamate", type: UnitDefValueType.STRING, isBalanceChange: false },
    world: { friendlyName: "World", type: UnitDefValueType.STRING, isBalanceChange: false },
    
    // https://springrts.com/wiki/Gamedev:WeaponDefs
    weapondefs: { friendlyName: "Weapons", type: UnitDefValueType.UNITDEF_OBJECT },
    areaofeffect: { friendlyName: "Area of Effect", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    avoidfeature: { friendlyName: "Avoid Features", type: UnitDefValueType.BOOLEAN },
    avoidfriendly: { friendlyName: "Avoid Friendlies", type: UnitDefValueType.BOOLEAN },
    avoidground: { friendlyName: "Avoid Ground", type: UnitDefValueType.BOOLEAN },
    beamtime: { friendlyName: "Beam Time", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    bouncerebound: { friendlyName: "Bounce Rebound", type: UnitDefValueType.NUMBER },
    burnblow: { friendlyName: "Self Explode", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    cegtag: { friendlyName: "CEG Tag", type: UnitDefValueType.STRING, isBalanceChange: false },
    commandfire: { friendlyName: "Command Fire", type: UnitDefValueType.BOOLEAN },
    corethickness: { friendlyName: "Core Thickness", type: UnitDefValueType.NUMBER },
    craterareaofeffect: { friendlyName: "Crater Area of Effect", type: UnitDefValueType.NUMBER },
    craterboost: { friendlyName: "Crater Boost", type: UnitDefValueType.NUMBER },
    cratermult: { friendlyName: "Crater Mult", type: UnitDefValueType.NUMBER },
    cylindertargeting: { friendlyName: "Cylinder Targeting", type: UnitDefValueType.NUMBER },
    edgeeffectiveness: { friendlyName: "Edge Effectiveness", type: UnitDefValueType.NUMBER },
    energypershot: { friendlyName: "Energy Per Shot", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    explosiongenerator: { friendlyName: "Explosion Generator", type: UnitDefValueType.STRING },
    firestarter: { friendlyName: "Fire Starter", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.trueIsBetter },
    firesubmersed: { friendlyName: "Fire Submersed", type: UnitDefValueType.BOOLEAN },
    flighttime: { friendlyName: "Flight Time", type: UnitDefValueType.NUMBER },
    groundbounce: { friendlyName: "Ground Bounce", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    impactonly: { friendlyName: "Impact Only", type: UnitDefValueType.NUMBER },
    impulseboost: { friendlyName: "Impulse Boost", type: UnitDefValueType.NUMBER },
    impulsefactor: { friendlyName: "Impulse Factor", type: UnitDefValueType.NUMBER },
    laserflaresize: { friendlyName: "Laser Flare Size", type: UnitDefValueType.NUMBER },
    noexplode: { friendlyName: "Explode on Impact", type: UnitDefValueType.BOOLEAN },
    noselfdamage: { friendlyName: "No Self Damage", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    range: { friendlyName: "Range", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.higherIsBetter },
    reloadtime: { friendlyName: "Reload Time", type: UnitDefValueType.NUMBER, buffComparator: buffComparators.lowerIsBetter },
    rgbcolor: { friendlyName: "RGB Color", type: UnitDefValueType.NUMBER_ARRAY, isBalanceChange: false },
    sfxtypes: { friendlyName: "Sound Types", type: UnitDefValueType.UNITDEF_OBJECT, isBalanceChange: false },
    size: { friendlyName: "Size", type: UnitDefValueType.NUMBER },
    sounds: { friendlyName: "Sounds", type: UnitDefValueType.UNITDEF_OBJECT, isBalanceChange: false },
    soundhitdry: { friendlyName: "Sound Hit Dry", type: UnitDefValueType.STRING, isBalanceChange: false },
    soundhitwet: { friendlyName: "Sound Hit Wet", type: UnitDefValueType.STRING, isBalanceChange: false },
    soundstartvolume: { friendlyName: "Sound Start Volume", type: UnitDefValueType.STRING, isBalanceChange: false },
    soundhitvolume: { friendlyName: "Sound Hit Volume", type: UnitDefValueType.STRING, isBalanceChange: false },
    soundstart: { friendlyName: "Sound Start", type: UnitDefValueType.STRING, isBalanceChange: false },
    soundtrigger: { friendlyName: "Sound Trigger", type: UnitDefValueType.BOOLEAN, isBalanceChange: false },
    sprayangle: { friendlyName: "Spray Angle", type: UnitDefValueType.NUMBER },
    targetmoveerror: { friendlyName: "Target Move Error", type: UnitDefValueType.NUMBER },
    thickness: { friendlyName: "Thickness", type: UnitDefValueType.NUMBER },
    tolerance: { friendlyName: "Tolerance", type: UnitDefValueType.NUMBER },
    turret: { friendlyName: "Turret", type: UnitDefValueType.BOOLEAN },
    waterweapon: { friendlyName: "Water Weapon", type: UnitDefValueType.BOOLEAN, buffComparator: buffComparators.trueIsBetter },
    weapontimer: { friendlyName: "Weapon Timer", type: UnitDefValueType.NUMBER },
    weapontype: { friendlyName: "Weapon Type", type: UnitDefValueType.STRING },
    weaponvelocity: { friendlyName: "Weapon Velocity", type: UnitDefValueType.NUMBER },
    alpha: { friendlyName: "Alpha", type: UnitDefValueType.NUMBER, isBalanceChange: false },
    energyuse: { friendlyName: "Energy Use", type: UnitDefValueType.NUMBER },
    force: { friendlyName: "Force", type: UnitDefValueType.NUMBER },
    intercepttype: { friendlyName: "Intercept Type", type: UnitDefValueType.NUMBER },
    power: { friendlyName: "Power", type: UnitDefValueType.NUMBER },
    powerregen: { friendlyName: "Power Regen", type: UnitDefValueType.NUMBER },
    powerregenenergy: { friendlyName: "Power Regen Energy", type: UnitDefValueType.NUMBER },
    radius: { friendlyName: "Radius", type: UnitDefValueType.NUMBER },
    repulser: { friendlyName: "Repulser", type: UnitDefValueType.NUMBER },
    smart: { friendlyName: "Smart", type: UnitDefValueType.BOOLEAN },
    startingpower: { friendlyName: "Starting Power", type: UnitDefValueType.NUMBER },
    visible: { friendlyName: "Visible", type: UnitDefValueType.BOOLEAN },
    visiblehitframes: { friendlyName: "Visible Hit Frames", type: UnitDefValueType.NUMBER },
    badcolor: { friendlyName: "Bad Color", type: UnitDefValueType.NUMBER_ARRAY, isBalanceChange: false },
    goodcolor: { friendlyName: "Good Color", type: UnitDefValueType.NUMBER_ARRAY, isBalanceChange: false }
};